{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2018-09-07T15:52:26.215Z",
    "end": "2018-09-07T15:52:26.290Z",
    "duration": 75,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "36818b98-c5fa-40ec-8e1d-50f8213319c7",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "d0bb5f5a-6a0a-4d4d-b3de-58121b8b771c",
        "title": "websocket integration tests",
        "fullFile": "/home/erik/Projects/@superhero/js.core.websocket/test/integration.test.js",
        "file": "/test/integration.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "websocket integration tests \"before each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const\nbootstrap = { [__dirname + '/../']:undefined },\nport      = 9001,\ndebug     = false,\ncore      = new Core({ debug })\ncontext(this, { title:'routes', value:routes })\ncore.bootstrap(bootstrap).then((core) =>\n{\n  client = new WsClient({ debug })\n  server = core.server('websocket', routes, { debug })\n  server.on('listening', async () =>\n  {\n    await client.connect(port)\n    done()\n  })\n  server.listen(port)\n})",
            "err": {},
            "isRoot": false,
            "uuid": "f0ce0c6a-809a-4f14-a711-dc824ff1be1b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "websocket integration tests \"after each\" hook",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "client.socket.end()\nserver.close()",
            "err": {},
            "isRoot": false,
            "uuid": "b28baacf-3240-4bb0-9914-ba528d598eca",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "websocket responding",
            "fullTitle": "websocket integration tests websocket responding",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"controller/reflect\",\n      \"policy\": \"reflect\",\n      \"args\": {}\n    },\n    {\n      \"endpoint\": \"controller/multi\",\n      \"policy\": \"multi\",\n      \"args\": {}\n    },\n    {\n      \"endpoint\": \"controller/not-implemented\",\n      \"policy\": \"not-implemented\",\n      \"args\": {}\n    }\n  ]\n}",
            "code": "const\nevt   = 'reflect',\ndata  = 'foobar'\nclient.events.on(evt, (dto) =>\n{\n  expect(dto).to.be.equal(data)\n  done()\n})\nclient.emit(evt, data)",
            "err": {},
            "isRoot": false,
            "uuid": "769d5535-44be-40cd-9881-1e9df0f9adb6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "websocket responding with multiple responses",
            "fullTitle": "websocket integration tests websocket responding with multiple responses",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"controller/reflect\",\n      \"policy\": \"reflect\",\n      \"args\": {}\n    },\n    {\n      \"endpoint\": \"controller/multi\",\n      \"policy\": \"multi\",\n      \"args\": {}\n    },\n    {\n      \"endpoint\": \"controller/not-implemented\",\n      \"policy\": \"not-implemented\",\n      \"args\": {}\n    }\n  ]\n}",
            "code": "const evt = 'multi'\nlet i = 0\nclient.events.on(evt, (dto) =>\n{\n  ++i === 3\n  && done()\n})\nclient.emit(evt)",
            "err": {},
            "isRoot": false,
            "uuid": "d81d17d9-2511-466e-9014-d69f860c4df7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "websocket not implemented response with an error",
            "fullTitle": "websocket integration tests websocket not implemented response with an error",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"controller/reflect\",\n      \"policy\": \"reflect\",\n      \"args\": {}\n    },\n    {\n      \"endpoint\": \"controller/multi\",\n      \"policy\": \"multi\",\n      \"args\": {}\n    },\n    {\n      \"endpoint\": \"controller/not-implemented\",\n      \"policy\": \"not-implemented\",\n      \"args\": {}\n    }\n  ]\n}",
            "code": "client.events.on('error', (dto) => done())\nclient.emit('not-implemented')",
            "err": {},
            "isRoot": false,
            "uuid": "4be15d91-615b-4991-8c5d-978d8d057674",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "769d5535-44be-40cd-9881-1e9df0f9adb6",
          "d81d17d9-2511-466e-9014-d69f860c4df7",
          "4be15d91-615b-4991-8c5d-978d8d057674"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 57,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}