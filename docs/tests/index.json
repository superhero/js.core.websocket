{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-14T16:04:54.588Z",
    "end": "2018-05-14T16:04:54.664Z",
    "duration": 76,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "a2f9c74a-ea5d-44f6-bb6b-4d1c734fba46",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "8a7a1715-13bc-469c-841e-f5cdb0494c3b",
        "title": "websocket integration tests",
        "fullFile": "/home/erik/Projects/@superhero/js.core.websocket/test/integration.test.js",
        "file": "/test/integration.test.js",
        "beforeHooks": [
          {
            "title": "\"before each\" hook",
            "fullTitle": "websocket integration tests \"before each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "const\nbootstrap = require('../bootstrap'),\nport      = 9001\ncontext(this, { title:'routes', value:routes})\ncore.bootstrap(bootstrap).then((core) =>\n{\n  const debug = false\n  client = new WsClient({ debug })\n  server = core.server('websocket', routes, { debug })\n  server.on('listening', async () =>\n  {\n    await client.connect(port)\n    done()\n  })\n  server.listen(port)\n})",
            "err": {},
            "isRoot": false,
            "uuid": "bfd29b73-e3f6-441f-9788-2a9f8b4d538f",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after each\" hook",
            "fullTitle": "websocket integration tests \"after each\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "client.socket.end()\nserver.close()",
            "err": {},
            "isRoot": false,
            "uuid": "dff6427c-4949-4904-b69a-1a936890b663",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "websocket responding",
            "fullTitle": "websocket integration tests websocket responding",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"controller/reflect\",\n      \"policy\": \"reflect\"\n    },\n    {\n      \"endpoint\": \"controller/multi\",\n      \"policy\": \"multi\"\n    },\n    {\n      \"chain\": \"controller/middleware\",\n      \"endpoint\": \"controller/obj\",\n      \"policy\": \"middleware\"\n    },\n    {\n      \"endpoint\": \"controller/not-implemented\",\n      \"policy\": \"not-implemented\"\n    }\n  ]\n}",
            "code": "const\nevt   = 'reflect',\ndata  = 'foobar'\nclient.events.on(evt, (dto) =>\n{\n  expect(dto).to.be.equal(data)\n  done()\n})\nclient.emit(evt, data)",
            "err": {},
            "isRoot": false,
            "uuid": "4f9621ac-2a8d-4b31-9e1c-3985324b57f0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "websocket responding with multiple responses",
            "fullTitle": "websocket integration tests websocket responding with multiple responses",
            "timedOut": false,
            "duration": 40,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"controller/reflect\",\n      \"policy\": \"reflect\"\n    },\n    {\n      \"endpoint\": \"controller/multi\",\n      \"policy\": \"multi\"\n    },\n    {\n      \"chain\": \"controller/middleware\",\n      \"endpoint\": \"controller/obj\",\n      \"policy\": \"middleware\"\n    },\n    {\n      \"endpoint\": \"controller/not-implemented\",\n      \"policy\": \"not-implemented\"\n    }\n  ]\n}",
            "code": "const evt = 'multi'\nlet i = 0\nclient.events.on(evt, (dto) =>\n{\n  ++i === 3\n  && done()\n})\nclient.emit(evt)",
            "err": {},
            "isRoot": false,
            "uuid": "cb082128-e2a0-423f-98c3-5999ae6bd98c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "websocket middleware works as expected",
            "fullTitle": "websocket integration tests websocket middleware works as expected",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"controller/reflect\",\n      \"policy\": \"reflect\"\n    },\n    {\n      \"endpoint\": \"controller/multi\",\n      \"policy\": \"multi\"\n    },\n    {\n      \"chain\": \"controller/middleware\",\n      \"endpoint\": \"controller/obj\",\n      \"policy\": \"middleware\"\n    },\n    {\n      \"endpoint\": \"controller/not-implemented\",\n      \"policy\": \"not-implemented\"\n    }\n  ]\n}",
            "code": "const evt = 'middleware'\nclient.events.on(evt, (dto) =>\n{\n  expect(dto.wentThroughMddleware).to.be.equal(true)\n  done()\n})\nclient.emit(evt)",
            "err": {},
            "isRoot": false,
            "uuid": "85bde94b-c999-4e8f-a585-d18b1555149b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "websocket not implemented response with an error",
            "fullTitle": "websocket integration tests websocket not implemented response with an error",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "context": "{\n  \"title\": \"routes\",\n  \"value\": [\n    {\n      \"endpoint\": \"controller/reflect\",\n      \"policy\": \"reflect\"\n    },\n    {\n      \"endpoint\": \"controller/multi\",\n      \"policy\": \"multi\"\n    },\n    {\n      \"chain\": \"controller/middleware\",\n      \"endpoint\": \"controller/obj\",\n      \"policy\": \"middleware\"\n    },\n    {\n      \"endpoint\": \"controller/not-implemented\",\n      \"policy\": \"not-implemented\"\n    }\n  ]\n}",
            "code": "client.events.on('error', (dto) => done())\nclient.emit('not-implemented')",
            "err": {},
            "isRoot": false,
            "uuid": "cabcd8d4-04a1-425e-b700-19fba0a869d6",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4f9621ac-2a8d-4b31-9e1c-3985324b57f0",
          "cb082128-e2a0-423f-98c3-5999ae6bd98c",
          "85bde94b-c999-4e8f-a585-d18b1555149b",
          "cabcd8d4-04a1-425e-b700-19fba0a869d6"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 59,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}